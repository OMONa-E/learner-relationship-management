# Generated by Django 5.1.2 on 2024-10-20 12:51

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('duration', models.IntegerField(default=0)),
                ('price', models.FloatField(default=0.0)),
                ('restriction', models.CharField(choices=[('Starter', 'Starter'), ('Intermediate', 'Intermediate'), ('Advance', 'Advance')], default=None, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nin', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(default=datetime.datetime.now)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='static/media/profile_images/% Y/% m/% d/')),
                ('document', models.FileField(blank=True, null=True, upload_to='static/media/documents/% Y/%m/% d')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Learner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(blank=True, choices=[('Starter', 'Starter'), ('Intermediate', 'Intermediate'), ('Advance', 'Advance')], default=None, max_length=20, null=True)),
                ('is_phoned', models.BooleanField(default=False)),
                ('is_emailed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_executed', models.BooleanField(default=False)),
                ('progress', models.FloatField(default=0.0)),
                ('date_of_enrollment', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learner')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positon', models.CharField(choices=[('Entry', 'Entry'), ('Junior', 'Junior'), ('Senior', 'Senior'), ('Principal', 'Principal')], max_length=20)),
                ('hired_date', models.DateField(default=datetime.datetime.now)),
                ('salary', models.FloatField(default=0.0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0.0)),
                ('unit_price', models.FloatField(default=0.0)),
                ('total_amount', models.FloatField(default=0.0)),
                ('order_date', models.DateField(default=datetime.datetime.now)),
                ('is_checked', models.BooleanField(default=False)),
                ('payment_method', models.CharField(choices=[('Bank', 'Bank'), ('MobileMoney', 'MobileMoney'), ('AirtelMoney', 'AirtelMoney'), ('PayPal', 'PayPal'), ('VisaCard', 'VisaCard')], default='VisaCard', max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learner')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Mechanical', 'Mechanical'), ('Electrical', 'Electrical'), ('Robotic', 'Robotic'), ('Computer', 'Computer')], default=None, max_length=20)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learner')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Personal', 'Personal'), ('Business', 'Business'), ('Finance', 'Finance'), ('Sale', 'Sale'), ('Learning', 'Learning'), ('Login', 'Login'), ('Logout', 'Logout')], max_length=20)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('date_took_place', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(auto_now_add=True)),
                ('duration', models.IntegerField(default=0)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enrollment')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learner')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainer')),
            ],
        ),
    ]
